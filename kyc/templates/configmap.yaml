apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-configmap
data:
  application-{{ .Values.env.profiles }}.yaml: |
    server:
      port: {{ .Values.service.port }}

    spring:
      datasource:
        url: {{ .Values.spring.datasource.url }}
        driver-class-name: {{ .Values.spring.datasource.driverClassName }}
        hikari:
          connection-test-query: {{ .Values.spring.datasource.hikari.connectionTestQuery }}
          validation-timeout: {{ .Values.spring.datasource.hikari.validationTimeout }}
      jpa:
        hibernate:
          ddl-auto: {{ .Values.spring.jpa.hibernate.ddlAuto }}
        generate-ddl: {{ .Values.spring.jpa.generateDdl }}
        show-sql: {{ .Values.spring.jpa.showSql }}
        open-in-view: {{ .Values.spring.jpa.openInView }}
        properties:
          hibernate:
            dialect: {{ .Values.spring.jpa.properties.hibernate.dialect }}

      kafka:
        producer:
          boostrap-servers: {{ .Values.spring.kafka.producer.boostrapServers }}

    apick:
      base-url: {{ .Values.apick.baseUrl }}

    user:
      base-url: {{ .Values.user.baseUrl }}

    logging:
      level:
        # 기본 로그 레벨
        root: INFO
        # KYC 관련 패키지는 INFO 레벨로 제한하여 DEBUG 정보 노출 방지
        "[com.ddiring.Backend_Kyc.integration.apick]": INFO
        # Spring Security, WebClient 등의 상세 로그 제한
        "[org.springframework.web.reactive.function.client]": WARN
        "[reactor.netty.http.client]": WARN
      pattern:
        # 로그 패턴에서 민감한 정보 노출 방지
        console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
        file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
